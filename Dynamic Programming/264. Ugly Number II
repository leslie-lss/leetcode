/*************************************************************************************************
Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:  

1 is typically treated as an ugly number.
n does not exceed 1690.
*************************************************************************************************/

//7ms
//38.41%
class Solution {
    public int nthUglyNumber(int n) {
        int res[] = new int[n];
        res[0] = 1;
        int index2 = 0;
        int index3 = 0;
        int index5 = 0;
        int factor2 = 2;
        int factor3 = 3;
        int factor5 = 5;
        for(int i = 1; i < n; i++){
            int min = Math.min(Math.min(factor2,factor3),factor5);
            if(min != res[i-1]){
                res[i] = min;
            }else{
                i--;
            }
            if(min == factor2){
                factor2 = res[++index2]*2;
            }else if(min == factor3){
                factor3 = res[++index3]*3;
            }else{
                factor5 = res[++index5]*5;
            }
        }
        return res[n-1];
    }
}
