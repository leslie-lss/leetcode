/**********************************************************************************
A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given a non-empty string containing only digits, determine the total number of ways to decode it.

Example 1:

Input: "12"
Output: 2
Explanation: It could be decoded as "AB" (1 2) or "L" (12).
Example 2:

Input: "226"
Output: 3
Explanation: It could be decoded as "BZ" (2 26), "VF" (22 6), or "BBF" (2 2 6).
**********************************************************************************/

//1ms
//95.58%
class Solution {
    public int numDecodings(String s) {
        int resOne = 1;
        int resTwo = 0;
        char[] ch = s.toCharArray();
        if(ch[0] == '0')
            return 0;
        for(int i = 1; i < ch.length; i++){
            if(ch[i] == '0' && (ch[i-1] > 50 || ch[i-1] == '0')){
                return 0;
            }else if(ch[i] == '0' && (ch[i-1] == '1' || ch[i-1] == '2')){
                resTwo = resOne;
                resOne = 0;
            }
            if((ch[i-1] == '2' && ch[i] <= 54) || (ch[i-1] == '1')){
                int temp = resTwo;
                resTwo = resOne;
                resOne = temp + resOne;
            }else{
                resOne = resOne + resTwo;
                resTwo = 0;
            }
        }
        return resOne +resTwo;
    }
}
