/*
    Given an index k, return the kth row of the Pascal's triangle.

    For example, given k = 3,
    Return [1,3,3,1]. 
*/
//返回杨辉三角的某一行的队列
//在计算新的一行时，不需要复制列表来进行读取工作，而是直接在队首添加1，其后的每两个元素进行依次相加，即可得到新一行的队列
//8.60%
//3ms
class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> list = new ArrayList<Integer>();
        if(rowIndex<0){
            return list;
        }
        list.add(1);
        for(int i = 1 ;i<=rowIndex; i++){
            list.add(0,1);
            for(int j = 1;j<i;j++){
                int a = list.get(j);
                int b = list.get(j+1);
                int temp = a+b;
                list.set(j,temp);
            }
        }
        return list;
    }
}
