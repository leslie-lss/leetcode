/********************************************************************
Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Restrictions:
The string consists of lower English letters only.
Length of the given string and k will in the range [1, 10000]
********************************************************************/

//5ms
//44.87%
class Solution {
    public String reverseStr(String s, int k) {
        char[] ch = s.toCharArray();
        for(int i = 0; i < s.length(); i = i + 2*k){
            if(i + k <= s.length()){
                ch = reverse(ch, i, i + k - 1);
            }else{
                ch = reverse(ch, i, s.length() - 1);
            }
        }
        return new String(ch);
    }
    public char[] reverse(char[] ch, int start, int end){
        for(int i = 0; i <= (end - start)/2; i++){
            char temp = ch[start + i];
            ch[start + i] = ch[end - i];
            ch[end - i] = temp;
        }
        return ch;
    }
}
