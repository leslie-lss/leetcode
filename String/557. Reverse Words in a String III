/**************************************************************************
Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, each word is separated by single space and there will not be any extra space in the string.
**************************************************************************/

//3ms
//99.92%
class Solution {
    public String reverseWords(String s) {
        char[] ch = s.toCharArray();
        for(int i = 0; i < ch.length; i++){
            if(ch[i] != ' '){
                int end = find(ch, i);
                ch = reverse(ch, i, end);
                i = end + 1;
            }
        }
        return new String(ch);
    }
    public int find(char[] ch, int start){
            for(int i = start + 1; i < ch.length; i++){
                if(ch[i] == ' '){
                    return i - 1;
                }
            }
            return ch.length - 1;
        }
        public char[] reverse(char[] ch, int start, int end){
            for(int i = 0; i <= (end - start)/2; i++){
                char temp = ch[start + i];
                ch[start + i] = ch[end - i];
                ch[end - i] = temp;
            }
            return ch;
        }
}
