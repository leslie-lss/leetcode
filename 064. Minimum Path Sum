Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.


//第一版
//借鉴前一道题Unique Path II的解题方法
//9ms
//84.66%
class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] sum = new int[m][n];
        sum[0][0] = grid[0][0];
        for(int i = 1; i < m; i++){
            sum[i][0] = grid[i][0] + sum[i-1][0];
        }
        for(int j = 1; j < n; j++){
            sum[0][j] = grid[0][j] + sum[0][j-1];
        }
        for(int i = 1; i < m; i++){
            for(int j = 1; j < n; j++){
                if(sum[i-1][j]<=sum[i][j-1]){
                    sum[i][j] = grid[i][j] + sum[i-1][j];
                }else{
                    sum[i][j] = grid[i][j] + sum[i][j-1];
                }
            }
        }
        return sum[m-1][n-1];
    }
}
