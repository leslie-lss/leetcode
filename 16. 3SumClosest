/*
    Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

        For example, given array S = {-1 2 1 -4}, and target = 1.

        The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

*/

//只需返回最接近target的组合的和值，利用整型值res来存储到目前为止最接近target的值

//26ms
//27.34%
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int res = nums[0]+nums[1]+nums[nums.length-1];
        for(int i = 0; i<nums.length-2; i++){
            int lo = i+1;
            int hi = nums.length-1;
            while(lo<hi){
                int sum = nums[i]+nums[lo]+nums[hi];
                if(sum>target){
                    hi--;
                }else{
                    lo++;
                }
                if(Math.abs(sum-target)<Math.abs(res-target)){
                    res=sum;
                }
            }
        }
        return res;
    }
}
