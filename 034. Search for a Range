Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]

//第一版
//8ms
//73.75%

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] position = new int[2];
        position[0] = -1;
        position[1] = -1;
        if(nums.length==0){
            return position;
        }
        int i = 0;
        while(nums[i]!=target){
            i++;
            if(i>=nums.length){
                return position;
            }
        }
        position[0] = i;
        while(i<nums.length&&nums[i]==target){
            i++;
        }
        position[1] = i-1;
        return position;
    }
}
